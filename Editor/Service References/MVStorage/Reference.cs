//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Editor.MVStorage
{
    using System.Runtime.Serialization;
    using System;


    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "StorageFile", Namespace = "http://schemas.datacontract.org/2004/07/MathiVersity.Libraries.BO")]
    [System.SerializableAttribute()]
    public partial class StorageFile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BodyField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Body
        {
            get
            {
                return this.BodyField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BodyField, value) != true))
                {
                    this.BodyField = value;
                    this.RaisePropertyChanged("Body");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                if ((this.IDField.Equals(value) != true))
                {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.NameField, value) != true))
                {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp
        {
            get
            {
                return this.TimeStampField;
            }
            set
            {
                if ((this.TimeStampField.Equals(value) != true))
                {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title
        {
            get
            {
                return this.TitleField;
            }
            set
            {
                if ((object.ReferenceEquals(this.TitleField, value) != true))
                {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID
        {
            get
            {
                return this.UserIDField;
            }
            set
            {
                if ((this.UserIDField.Equals(value) != true))
                {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "FileUploadResult", Namespace = "http://schemas.datacontract.org/2004/07/MathiVersity.Libraries.BO")]
    [System.SerializableAttribute()]
    public partial class FileUploadResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Editor.MVStorage.FileUploadFailureStatus FailureStatusField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Editor.MVStorage.FileUploadFailureStatus FailureStatus
        {
            get
            {
                return this.FailureStatusField;
            }
            set
            {
                if ((this.FailureStatusField.Equals(value) != true))
                {
                    this.FailureStatusField = value;
                    this.RaisePropertyChanged("FailureStatus");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                if ((object.ReferenceEquals(this.MessageField, value) != true))
                {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success
        {
            get
            {
                return this.SuccessField;
            }
            set
            {
                if ((this.SuccessField.Equals(value) != true))
                {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "FileUploadFailureStatus", Namespace = "http://schemas.datacontract.org/2004/07/MathiVersity.Libraries.BO")]
    public enum FileUploadFailureStatus : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        CredentialsInvalid = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        FileInvalid = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        LimitExceded = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 3,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "MVStorage.IStorage")]
    public interface IStorage
    {

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IStorage/GetFiles", ReplyAction = "http://tempuri.org/IStorage/GetFilesResponse")]
        Editor.MVStorage.StorageFile[] GetFiles(string psToken);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IStorage/GetFile", ReplyAction = "http://tempuri.org/IStorage/GetFileResponse")]
        Editor.MVStorage.StorageFile GetFile(string psToken, int piID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IStorage/AddFile", ReplyAction = "http://tempuri.org/IStorage/AddFileResponse")]
        bool AddFile(string psToken, Editor.MVStorage.StorageFile poStorageFile);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IStorage/UpdateFile", ReplyAction = "http://tempuri.org/IStorage/UpdateFileResponse")]
        bool UpdateFile(string psToken, Editor.MVStorage.StorageFile poStorageFile);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IStorage/DeleteFile", ReplyAction = "http://tempuri.org/IStorage/DeleteFileResponse")]
        bool DeleteFile(string psToken, int piID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IStorage/UploadSpiroFile", ReplyAction = "http://tempuri.org/IStorage/UploadSpiroFileResponse")]
        Editor.MVStorage.FileUploadResult UploadSpiroFile(string psToken, Editor.MVStorage.StorageFile poStorageFile);
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStorageChannel : Editor.MVStorage.IStorage, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StorageClient : System.ServiceModel.ClientBase<Editor.MVStorage.IStorage>, Editor.MVStorage.IStorage
    {

        public StorageClient()
        {
        }

        public StorageClient(string endpointConfigurationName) :
        base(endpointConfigurationName)
        {
        }

        public StorageClient(string endpointConfigurationName, string remoteAddress) :
        base(endpointConfigurationName, remoteAddress)
        {
        }

        public StorageClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
        base(endpointConfigurationName, remoteAddress)
        {
        }

        public StorageClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
        base(binding, remoteAddress)
        {
        }

        public Editor.MVStorage.StorageFile[] GetFiles(string psToken)
        {
            return base.Channel.GetFiles(psToken);
        }

        public Editor.MVStorage.StorageFile GetFile(string psToken, int piID)
        {
            return base.Channel.GetFile(psToken, piID);
        }

        public bool AddFile(string psToken, Editor.MVStorage.StorageFile poStorageFile)
        {
            return base.Channel.AddFile(psToken, poStorageFile);
        }

        public bool UpdateFile(string psToken, Editor.MVStorage.StorageFile poStorageFile)
        {
            return base.Channel.UpdateFile(psToken, poStorageFile);
        }

        public bool DeleteFile(string psToken, int piID)
        {
            return base.Channel.DeleteFile(psToken, piID);
        }

        public Editor.MVStorage.FileUploadResult UploadSpiroFile(string psToken, Editor.MVStorage.StorageFile poStorageFile)
        {
            return base.Channel.UploadSpiroFile(psToken, poStorageFile);
        }
    }
}
